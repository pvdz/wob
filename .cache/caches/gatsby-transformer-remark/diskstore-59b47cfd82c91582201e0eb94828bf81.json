{"expireTime":9007200841267775000,"key":"transformer-remark-markdown-html-8cf898dc0f1264aa68e32c55e48dca79-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-autolink-headers-","val":"<h1 id=\"what-o-bout\"><a href=\"#what-o-bout\" aria-label=\"what o bout permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What o Bout?</h1>\n<p>How do you put two newline characters in a string with only one line continuation?</p>\n<p>Normally, strings in JS are not allowed to have a newline. You must escape them, for example <code class=\"language-text\">&quot;\\n&quot;</code>.</p>\n<p>However, there is a concept called \"line continuation\", where you can escape the new line character to introduce a visual newline in the code without adding it to the actual string value:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">str <span class=\"token operator\">=</span> <span class=\"token string\">\"ab\\\ncd\"</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">===</span> <span class=\"token string\">\"abcd\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>So my question is: how can you legitimately put <em>two</em> newline characters in a string using only one such line-continuation?</p>\n<p>There are actually two answers to this question.</p>"}