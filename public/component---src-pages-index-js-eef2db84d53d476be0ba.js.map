{"version":3,"sources":["webpack:///./src/components/PostListing.js","webpack:///./src/pages/index.js"],"names":["PostListing","postEdges","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","categories","cover","title","date","excerpt","timeToRead","getPostList","className","styles","articleList","map","post","to","key","articleBox","right","meta","join","pageQuery","Index","data","config","siteTitle","allMarkdownRemark","edges"],"mappings":"uOA2CeA,EAvCK,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAkBfC,EAjBc,WAClB,IAAMA,EAAW,GAajB,OAZAD,EAAUE,SAAQ,SAAAC,GAChBF,EAASG,KAAK,CACZC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,KAAMN,EAASG,KAAKI,YAAYD,KAChCE,WAAYR,EAASG,KAAKI,YAAYC,WACtCC,MAAOT,EAASG,KAAKI,YAAYE,MACjCC,MAAOV,EAASG,KAAKI,YAAYG,MACjCC,KAAMX,EAASG,KAAKC,OAAOO,KAC3BC,QAASZ,EAASG,KAAKS,QACvBC,WAAYb,EAASG,KAAKU,gBAGvBf,EAGQgB,GACjB,OACE,yBAAKC,UAAWC,IAAOC,aAErBnB,EAASoB,KAAI,SAAAC,GAAI,OACf,kBAAC,IAAD,CAAMC,GAAID,EAAKjB,KAAMmB,IAAKF,EAAKT,OAC7B,6BAASK,UAAWC,IAAOM,YACzB,yBAAKP,UAAWC,IAAOO,OACrB,4BAAKJ,EAAKT,OACV,yBAAKK,UAAWC,IAAOQ,MACpBL,EAAKR,KADR,MACsB,8BAAOQ,EAAKX,WAAWiB,KAAK,SAElD,2BAAIN,EAAKP,iB,qBCfVc,GAHEC,UATD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACZ,kBAAC,IAAD,KACE,8BACE,kBAAC,IAAD,CAAQlB,MAAOmB,IAAOC,YACtB,kBAAC,EAAD,CAAajC,UAAW+B,EAAKG,kBAAkBC,WAQ/B","file":"component---src-pages-index-js-eef2db84d53d476be0ba.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport styles from './PostsListing.module.scss'\n\nconst PostListing = ({ postEdges }) => {\n  const getPostList = () => {\n    const postList = []\n    postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        categories: postEdge.node.frontmatter.categories,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      })\n    })\n    return postList\n  }\n\n  const postList = getPostList()\n  return (\n    <div className={styles.articleList}>\n      {/* Your post list here. */\n      postList.map(post => (\n        <Link to={post.path} key={post.title}>\n          <article className={styles.articleBox}>\n            <div className={styles.right}>\n              <h3>{post.title}</h3>\n              <div className={styles.meta}>\n                {post.date} &mdash; <span>{post.categories.join(' / ')}</span>\n              </div>\n              <p>{post.excerpt}</p>\n            </div>\n          </article>\n        </Link>\n      ))}\n    </div>\n  )\n}\n\nexport default PostListing\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../layout'\nimport PostListing from '../components/PostListing'\nimport config from '../../data/SiteConfig'\n\nconst Index = ({ data }) => (\n  <Layout>\n    <main>\n      <Helmet title={config.siteTitle} />\n      <PostListing postEdges={data.allMarkdownRemark.edges} />\n    </main>\n  </Layout>\n)\n\nexport default Index\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 2000\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          frontmatter {\n            title\n            tags\n            categories\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}